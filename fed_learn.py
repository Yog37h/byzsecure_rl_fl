# -*- coding: utf-8 -*-
"""fed_learn

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xSdozFdhtW0rafNktmCSQnKzQiiCsHgc
"""

from google.colab import drive
drive.mount('/content/drive')

!unzip "/content/drive/MyDrive/final year project/gaudi_byzantine_colab.zip" -d /content/

!python main.py --dataset bloodmnist --method fedavg --c_frac 0.2 --global_ep 20

!python main.py --dataset bloodmnist --method fedavg --plugin --c_frac 0.2 --global_ep 20

!pip install torch torchvision medmnist psutil GPUtil tensorboard tqdm

import torch
print(f"CUDA available: {torch.cuda.is_available()}")
if torch.cuda.is_available():
    print(f"GPU: {torch.cuda.get_device_name()}")

#@title Push to GitHub
!git init
!git remote add origin https://github.com/Yog37h/byzsecure_rl_fl.git
!git add .
!git status
!git rm --cached "drive/MyDrive/1 Academic Rank List 2023 (1).gdoc"
!git commit -m "Initial commit from Colab"
!git push -u origin main

!git config --global user.email "kiyogesh80@gmail.com"
!git config --global user.name "Yog37h"

!pip install -r requirements.txt

# Commented out IPython magic to ensure Python compatibility.
# %cd /content
!python main.py

# Commented out IPython magic to ensure Python compatibility.
# %cd /content
# The main.py script should load the model from the checkpoint path if it exists,
# and then proceed to the testing phase.
!python main.py

!python main.py --dataset bloodmnist --method fedavg --c_frac 0.2 --global_ep 50

!python main.py --dataset bloodmnist --method fedprox --lamb 10 --c_frac 0.3 --global_ep 50

!python main.py --dataset bloodmnist --method feddyn --plugin --lamb 10 --c_frac 0.3 --global_ep 75

!python main.py --dataset bloodmnist --method feddyn --plugin --lamb 10 --c_frac 0.3 --global_ep 50 --lr 0.01 --local_ep 10 --num_peers 2

!python main.py --dataset bloodmnist --method feddyn --plugin --lamb 1 --c_frac 0.1 --global_ep 50 --lr 0.0001 --local_ep 5 --num_peers 2

!python main.py --dataset bloodmnist --method feddyn --plugin --lamb 1 --c_frac 0.1 --global_ep 50 --lr 0.001 --local_ep 10 --num_peers 7

!pip uninstall gymnasium -y
!pip install -r requirements.txt
!pip uninstall dopamine-rl -y  # Optional, if not needed

# Test 1: No P2P, just standard federated learning
!python main.py --env CartPole-v1 --rl_method a2c \
  --num_peers 0 \
  --lr 0.001 \
  --local_ep 50 \
  --global_ep 30 \
  --c_frac 0.0 \
  --patience 30 \
  --delta 0.0

# Test robustness with 1 malicious client
!python main.py --env CartPole-v1 --rl_method a2c \
  --num_clients 10 \
  --num_peers 0 \
  --lr 0.001 \
  --local_ep 50 \
  --global_ep 40 \
  --c_frac 0.1 \
  --patience 30 \
  --delta 0.0

!python main.py --env CartPole-v1 --rl_method a2c \
  --num_clients 10 --num_peers 3 --plugin --method fedavg \
  --lr 0.001 --local_ep 50 --global_ep 40 \
  --c_frac 0.1 --p untarget --patience 30 --delta 0.0

!python main.py --env CartPole-v1 --rl_method a2c \
  --num_clients 5 \
  --num_peers 2 \
  --plugin \
  --method fedavg \
  --lr 0.001 \
  --local_ep 5 \
  --global_ep 5 \
  --c_frac 0.1 \
  --p untarget \
  --patience 3 \
  --delta 0.0

!python main.py --env CartPole-v1 --rl_method a2c \
  --num_clients 5 --num_peers 2 --plugin --method fedavg \
  --lr 0.001 --local_ep 100 --global_ep 60 \
  --c_frac 0.1 --p untarget --patience 20 --delta 0.0 \
  --tsboard